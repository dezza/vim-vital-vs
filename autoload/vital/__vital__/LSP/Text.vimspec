let s:expect = themis#helper('expect')
let s:Text = vital#vital#import('LSP.Text')

Describe vital#__vital__#LSP#Text

  Describe #normalize_eol

    It should normalize \r\n -> \n
      call s:expect(s:Text.normalize_eol("あいうえお\r\nかきくけこ")).to_equal("あいうえお\nかきくけこ")
    End

    It should normalize \r -> \n
      call s:expect(s:Text.normalize_eol("あいうえお\rかきくけこ")).to_equal("あいうえお\nかきくけこ")
    End

    It should normalize \r\n\r -> \n\n
      call s:expect(s:Text.normalize_eol("あいうえお\r\n\rかきくけこ")).to_equal("あいうえお\n\nかきくけこ")
    End

    It should normalize \r\n\n\r\r\n -> \n\n\n\n
      call s:expect(s:Text.normalize_eol("あいうえお\r\n\n\r\r\nかきくけこ")).to_equal("あいうえお\n\n\n\nかきくけこ")
    End

  End

  Describe #split_eol

    It should split text by \r\n
      call s:expect(s:Text.split_eol("あいうえお\r\nかきくけこ")).to_equal(['あいうえお', 'かきくけこ'])
    End

    It should split text by \r
      call s:expect(s:Text.split_eol("あいうえお\rかきくけこ")).to_equal(['あいうえお', 'かきくけこ'])
    End

    It should split text by \r\n\r
      call s:expect(s:Text.split_eol("あいうえお\r\n\rかきくけこ")).to_equal(['あいうえお', '', 'かきくけこ'])
    End

    It should split text by \r\n\n\r\r\n
      call s:expect(s:Text.split_eol("あいうえお\r\n\n\r\r\nかきくけこ")).to_equal(['あいうえお', '', '', '', 'かきくけこ'])
    End

  End

End



